name: Deploy App

on:
  push:
    branches: 
      - with-promotions # Trigger the workflow on push to the main branch
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        type: choice
        options:
        - 'staging'
        - 'production'
        default: 'staging'

jobs:
  integrity:
    name: Code Integrity
    uses: ./.github/workflows/integrity.yml
  build:
    name: Build
    uses: ./.github/workflows/build.yml
    with:
      tag_prefix: pr-${{github.event.number}}
    secrets:
      AWS_CREDENTIALS: ${{ secrets.AWS_CREDENTIALS }}

  deploy-to-staging:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download dist folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build/

      - name: Load .env file
        uses: falti/dotenv-action@v1.0.4
        with:
          path: .env.${{ github.event.inputs.environment }}
          log-variables: true
          export-variables: true
          keys-case: upper

      - name: Echo some env variables
        run: |
          echo "Variable 1: ${{ env.NODE_ENV }}"
          echo "Variable 1: ${{ env.TEST_ENV }}"

  deploy-to-production:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-to-staging
    environment: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build/

      - name: Load .env file
        uses: falti/dotenv-action@v1.0.4
        with:
          path: .env.${{ github.event.inputs.environment }}
          log-variables: true
          export-variables: true
          keys-case: upper

      - name: Echo some env variables
        run: |
          echo "Variable 1: ${{ env.NODE_ENV }}"
          echo "Variable 1: ${{ env.TEST_ENV }}"